// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: tendermint/privval/types.proto

package privval

import (
	fmt "fmt"
	proto "github.com/gogo/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type Errors int32

const (
	Errors_ERRORS_UNKNOWN             Errors = 0
	Errors_ERRORS_UNEXPECTED_RESPONSE Errors = 1
	Errors_ERRORS_NO_CONNECTION       Errors = 2
	Errors_ERRORS_CONNECTION_TIMEOUT  Errors = 3
	Errors_ERRORS_READ_TIMEOUT        Errors = 4
	Errors_ERRORS_WRITE_TIMEOUT       Errors = 5
)

var Errors_name = map[int32]string{
	0: "ERRORS_UNKNOWN",
	1: "ERRORS_UNEXPECTED_RESPONSE",
	2: "ERRORS_NO_CONNECTION",
	3: "ERRORS_CONNECTION_TIMEOUT",
	4: "ERRORS_READ_TIMEOUT",
	5: "ERRORS_WRITE_TIMEOUT",
}

var Errors_value = map[string]int32{
	"ERRORS_UNKNOWN":             0,
	"ERRORS_UNEXPECTED_RESPONSE": 1,
	"ERRORS_NO_CONNECTION":       2,
	"ERRORS_CONNECTION_TIMEOUT":  3,
	"ERRORS_READ_TIMEOUT":        4,
	"ERRORS_WRITE_TIMEOUT":       5,
}

func (x Errors) String() string {
	return proto.EnumName(Errors_name, int32(x))
}

func (Errors) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_cb4e437a5328cf9c, []int{0}
}

func init() {
	proto.RegisterEnum("tendermint.privval.Errors", Errors_name, Errors_value)
}

func init() { proto.RegisterFile("tendermint/privval/types.proto", fileDescriptor_cb4e437a5328cf9c) }

var fileDescriptor_cb4e437a5328cf9c = []byte{
	// 237 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x92, 0x2b, 0x49, 0xcd, 0x4b,
	0x49, 0x2d, 0xca, 0xcd, 0xcc, 0x2b, 0xd1, 0x2f, 0x28, 0xca, 0x2c, 0x2b, 0x4b, 0xcc, 0xd1, 0x2f,
	0xa9, 0x2c, 0x48, 0x2d, 0xd6, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x12, 0x42, 0xc8, 0xeb, 0x41,
	0xe5, 0xb5, 0x56, 0x30, 0x72, 0xb1, 0xb9, 0x16, 0x15, 0xe5, 0x17, 0x15, 0x0b, 0x09, 0x71, 0xf1,
	0xb9, 0x06, 0x05, 0xf9, 0x07, 0x05, 0xc7, 0x87, 0xfa, 0x79, 0xfb, 0xf9, 0x87, 0xfb, 0x09, 0x30,
	0x08, 0xc9, 0x71, 0x49, 0xc1, 0xc5, 0x5c, 0x23, 0x02, 0x5c, 0x9d, 0x43, 0x5c, 0x5d, 0xe2, 0x83,
	0x5c, 0x83, 0x03, 0xfc, 0xfd, 0x82, 0x5d, 0x05, 0x18, 0x85, 0x24, 0xb8, 0x44, 0xa0, 0xf2, 0x7e,
	0xfe, 0xf1, 0xce, 0xfe, 0x7e, 0x7e, 0xae, 0xce, 0x21, 0x9e, 0xfe, 0x7e, 0x02, 0x4c, 0x42, 0xb2,
	0x5c, 0x92, 0x50, 0x19, 0x84, 0x70, 0x7c, 0x88, 0xa7, 0xaf, 0xab, 0x7f, 0x68, 0x88, 0x00, 0xb3,
	0x90, 0x38, 0x97, 0x30, 0x54, 0x3a, 0xc8, 0xd5, 0xd1, 0x05, 0x2e, 0xc1, 0x82, 0x64, 0x62, 0x78,
	0x90, 0x67, 0x88, 0x2b, 0x5c, 0x86, 0xd5, 0x29, 0xf8, 0xc4, 0x23, 0x39, 0xc6, 0x0b, 0x8f, 0xe4,
	0x18, 0x1f, 0x3c, 0x92, 0x63, 0x9c, 0xf0, 0x58, 0x8e, 0xe1, 0xc2, 0x63, 0x39, 0x86, 0x1b, 0x8f,
	0xe5, 0x18, 0xa2, 0x2c, 0xd3, 0x33, 0x4b, 0x32, 0x4a, 0x93, 0xf4, 0x92, 0xf3, 0x73, 0xf5, 0x91,
	0xc2, 0x00, 0x25, 0x38, 0xf2, 0x4b, 0xf2, 0xf5, 0x31, 0xc3, 0x27, 0x89, 0x0d, 0x2c, 0x63, 0x0c,
	0x08, 0x00, 0x00, 0xff, 0xff, 0xf8, 0x8d, 0x1a, 0x15, 0x3c, 0x01, 0x00, 0x00,
}
